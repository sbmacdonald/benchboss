#!/bin/bash
. functions

# -----------------------------------------------------------------------------
function moveToRegulars() {
  # ";" separated list of email addresses
  for p in ${CGI_plist//;/ } ; do
    #          ____\1_____   __\2_____   _\3_   __\4___
    sed -i "s/\($p~.*~.*~\)\([r|s|i]~\)\(.~.\)\(~[a|e]\)/\1r~\3~e/" ${ROSTER}
    logInfo "MoveToRegulars($REMOTE_USER): $p" >> $rosterLogFile
  done
}

# -----------------------------------------------------------------------------
function moveToSpares() {
  # ";" separated list of email addresses
  for p in ${CGI_plist//;/ } ; do
    #          ____\1_____   __\2_____   _\3_   __\4___
    sed -i "s/\($p~.*~.*~\)\([r|s|i]~\)\(.~.\)\(~[a|e]\)/\1s~\3~e/" ${ROSTER}
    logInfo "MoveToSpare($REMOTE_USER): $p" >> $rosterLogFile
  done
}

# -----------------------------------------------------------------------------
function moveToInactive() {
  # ";" separated list of email addresses
  for p in ${CGI_plist//;/ } ; do
    #          ____\1______  ___\2____  __\3__  __\4___
    #           em~fn~ln~   reg|sp|inac ~g|s~u|c  ~a|e
    sed -i "s/\($p~.*~.*~\)\([r|s|i]~\)\(.~.\)\(~[a|e]\)/\1i~\3~e/" ${ROSTER} 
    logInfo "MoveToInactive($REMOTE_USER): $p" >> $rosterLogFile
  done
}

# -----------------------------------------------------------------------------
function moveToBeerDuty() {
  # ";" separated list of email addresses
  for p in ${CGI_plist//;/ } ; do
    #           __________\1______
    #           em~fn~ln~ty~po~co~    
    sed -i "s/\($p~.*~.*~.*~.*~.*\)\(~e\)/\1~a/" ${ROSTER} 
    logInfo "MoveToBeerDuty($REMOTE_USER): $p" >> $rosterLogFile
  done
}

# -----------------------------------------------------------------------------
function moveToBeerDutyExemptions() {
  # ";" separated list of email addresses
  for p in ${CGI_plist//;/ } ; do
    #           __________\1______
    #           em~fn~ln~ty~po~co~    
    sed -i "s/\($p~.*~.*~.*~.*~.*\)\(~a\)/\1~e/" ${ROSTER} 
    logInfo "MoveToBeerExemption($REMOTE_USER): $p" >> $rosterLogFile
  done
}

# -----------------------------------------------------------------------------
function deletePlayer() {
  # ";" separated list of email addresses
  for p in ${CGI_plist//;/ } ; do
    #grab the entry from the roster so we can log it
    playerRecord=`grep $p ${ROSTER}`
    sed -i "/$p/d" ${ROSTER}
    # remove the deleted player from any attendance files
    sed -i "/${p}/d" $inFile $outFile
    logInfo "Delete($REMOTE_USER): $playerRecord" >> $rosterLogFile
    # TODO: remove deleted player from Beer files
  done
}

# -----------------------------------------------------------------------------
function moveToConfirmed() {
    # ";" separated list of email addresses
    inFile=`getFilename in`
    outFile=`getFilename out`
    for p in ${CGI_plist//;/ } ; do
      sed -i "s/\($p~.*~.*~.*~.*~\)\([u|c]\)\(~.*\)/\1c\3/" ${ROSTER}
      logInfo "Confirm($REMOTE_USER): $p" >> $rosterLogFile
  done
}

# -----------------------------------------------------------------------------
function reconfirm() {
  # ";" separated list of email addresses
  for p in ${CGI_plist//;/ } ; do
    sendRegistrationEmail $p &
    logInfo "Reconfirm($REMOTE_USER): $p" >> $rosterLogFile
    # short pause between email sent requests
    sleep .5
  done
}

# -----------------------------------------------------------------------------
# Print the guts of the roster management page
function printBulkRosterPageRSI () {
  tempRosterFile=${ROSTER}.tmp
  
  regularsCount=`grep -c -i "^[A-z].*~[r]~[s|g]~[u|c]~[a|e]$" ${ROSTER}`
  sparesCount=`grep -c -i "^[A-z].*~[s]~[s|g]~[u|c]~[a|e]$" ${ROSTER}`
  inactiveCount=`grep -c -i "^[A-z].*~[i]~[s|g]~[u|c]~[a|e]$" ${ROSTER}`
  goalieCount=`grep -c -i "^[A-z].*~[r|s]~[g]~[u|c]~[a|e]$" ${ROSTER}`
  urlParams="addPlayer.cgi?action=add"
  editLink="${rosterUrl}?action=edit&fname=Anthony&lname=Bellis&email=tonybellis@hotmail.com&pos=s&type=r"

printf "<h3>Roster Manager</h3>"

#if [ `wc -l ${ROSTER} | awk '{print $1}'` -eq 0 ] ; then
#  . forms
#  printRosterTemplateDownloadForm
#  #printRosterUploadForm
#fi

#printf "<form method=\"post\" action=\"addPlayer.cgi?action=add\">"
#printf "<input type=\"hidden\" name=\"action\" id=\"action\" value=\"add\">"
#printf "<input class=\"btn btn-primary\" type=\"submit\" value=\"Add a new Player &raquo;\" >"
#printf "</form>"
#printf "<hr>\n"


# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# R E G U L A R S, (sorted goalies first, then skaters)
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

if [ $regularsCount -lt 5 ]  ; then
  regularSectionHeight="min-Height:160px"
fi
if [ ${sparesCount:-0} -gt 0 -a $sparesCount -lt 5 ]  ; then
  sparesSectionHeight="min-Height:160px"
fi
if [ ${inactiveCount:-0} -gt 0 -a $inactiveCount -lt 5 ]  ; then
  inactiveSectionHeight="min-Height:160px"
fi

cat << EEE

<div class="accordion" id="roster">
  <div class="accordion-group">
   <div class="accordion-heading">
     <a class="accordion-toggle" style="text-decoration:none;" data-toggle="collapse" data-parent="#roster" href="#regularsSection"><b>Regulars($regularsCount)</b></a>
   </div>
   <div id="regularsSection" class="accordion-body collapse out">
     <div class="accordion-inner" style="${regularSectionHeight}">
     
       <div class="form-actions" style="margin:0px; padding:0px;">
         <div class="btn-group">
           <button class="btn btn-small dropdown-toggle" style="border-radius: 0px;" data-toggle="dropdown"><input id="regularsGroup" type="checkbox" style="margin-top:0px;">&nbsp;&nbsp;<span class="icon-caret-down"></span></input></button>
           <ul class="dropdown-menu">
             <li><a onclick="toggleGroup2(true, 'regularsGroup','regulars')">all</a></li>
             <li><a onclick="toggleGroup2(false,'regularsGroup','regulars')">none</a></li>
             <li><a onclick="selectListByClass('regularsList','s','regularsGroup')">skaters</a></li>
             <li><a onclick="selectListByClass('regularsList','g','regularsGroup')">goalies</a></li>
           </ul>
         </div>

         <div class="btn-group">
           <button id="regularsGroupMenu" class="btn btn-primary dropdown-toggle" style="border-radius: 0px; display: none;" data-toggle="dropdown"><i class="icon-user icon-white">&nbsp;</i> Actions <span class="icon-caret-down"></span></button>
           <ul class="dropdown-menu">
             <li id="edit"><a href="#" onclick="editPlayer('regularsList')"><i class="icon-edit text-info"></i> <span class="text-info">edit</span></a></li>
             <li id="move"><a href="bulkRoster-rsi.html" onclick="moveTo('regularsList','s')"><i class="icon-download-alt text-success"></i> <span class="text-success">move to spares</span></a></li>
             <li id="markInactive"><a href="bulkRoster-rsi.html" onclick="moveTo('regularsList','i')"><i class="icon-pause muted"></i> <span class="muted">mark inactive</span></a></li>
             <li class="divider"></li>
             <li id="remove"><a href="bulkRoster-rsi.html" onclick="moveTo('regularsList','d')"><i class="icon-trash text-error"></i> <span class="text-error">remove</span></a></li>
EEE

# Add in the Beer Roster management iff the Beer Tracker is enabled

if [[ "${beerTracker}" == "yesterday" ]] ; then
cat <<EEE
             <li class="divider"></li>
             <li id="beergroup"><a href="bulkRoster-rsi.html" onclick="moveTo('regularsList','d')"><i class="icon-beer" style="color:Peru"></i> <span style="color:Peru">Add to Beer roster</span></a></li>
             <li id="beergroup"><a href="bulkRoster-rsi.html" onclick="moveTo('regularsList','d')"><i class="icon-warning-sign"></i> <span>Remove from Beer roster</span></a></li>
EEE
fi

cat <<EEE
           </ul>
         </div> <!-- / class="btn-group" -->
          <div class="btn-group">
            <button onclick="window.location.replace('addPlayer.cgi?action=add&type=r')" id="regularsGroupAdd" class="btn btn-primary" style="border-radius: 0px;"><span class="icon-user"></span>&nbsp;<span class="icon-plus"></span></button>
          </div>
       </div> <!-- / class="form-actions" -->


<table class="table table-hover table-condensed" id="regularsList" cellpadding="2" cellspacing="0" border="0">

<tbody>
EEE
  for player in `grep -i "~[r]~[g|s]~[u|c]~[a|e]$" ${ROSTER} | sort -u -t"~" -k1 | sort -t"~" -k5 -k3 | awk -F"~" '{if($1 !~ /^#/){print $1}}'`; do
    playerPos=`getPlayerPosition $player`
    printf "<tr id=\"$player\">\n"
    printf "<td width=\"10\">\n"
    printf "<input type=\"checkbox\" class=\"$playerPos\" id=\"cb_$player\" name=\"regulars\" onclick=\"selectRow(this)\" style=\"vertical-align: baseline;\">"
    
    printf "</td><td><label for=\"cb_$player\"> %s" "`getFullName $player`" 
    if [ `isGoalie $player` -eq 0 ] ; then
      printf "<i class="muted"> (goalie)</i>"
    fi
    # TODO: implement this !!
    #if [ `isBeerGuy $player` -eq 0 ] ; then
    #  printf "<span class="inline label label-warning">Beer Guy !</span>"
    #fi
    printf "</label></td>"
    printf "</tr>"
  done

cat << EOW
</tbody>
</table>
   </div> <!-- /class="accordion-inner" -->
  </div> <!-- /id="regularsSection" -->
</div> <!-- /class="accordion-group" -->
EOW


# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# S P A R E S !
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
if [ ${sparesCount:-0} -eq 0 ] ; then
  spareSelectorEnabled="disabled" 
fi

cat << EOE
  <div class="accordion-group">
    <div class="accordion-heading">
      <a class="accordion-toggle" style="text-decoration:none;" data-toggle="collapse" data-parent="#roster" href="#sparesSection"><b>Spares(${sparesCount:-0}):</b></a>
    </div>
    <div id="sparesSection" class="accordion-body collapse out">
      <div class="accordion-inner"  style="${sparesSectionHeight}">
        <div class="form-actions" style="margin:0px; padding:0px;">
          <div class="btn-group">
            <button $spareSelectorEnabled class="btn btn-small dropdown-toggle" style="border-radius: 0px;" data-toggle="dropdown"><input id="spareGroup" type="checkbox" style="margin-top:0px;">&nbsp;&nbsp;<span class="icon-caret-down"></button>
            <ul class="dropdown-menu">
              <li><a onclick="toggleGroup2(true,'spareGroup','spare')">all</a></li>
              <li><a onclick="toggleGroup2(false,'spareGroup','spare')">none</a></li>
            </ul>
          </div> <!-- / class="btn-group" -->

          <div class="btn-group">
            <button id="spareGroupMenu" class="btn btn-primary dropdown-toggle" style="border-radius: 0px; display: none;" data-toggle="dropdown"><i class="icon-user icon-white">&nbsp;</i> Actions <span class="icon-caret-down"></span></button>
            <ul class="dropdown-menu">
              <li id="edit"><a href="#" onclick="editPlayer('spareList')"><i class="icon-edit text-info"></i> <span class="text-info">edit</span></a></li>
              <li id="move"><a href="bulkRoster-rsi.html" onclick="moveTo('spareList','r')"><i class="icon-upload-alt text-success"></i> <span class="text-success">move to regulars</span></a></li>
              <li id="markInactive"><a href="bulkRoster-rsi.html" onclick="moveTo('spareList','i')"><i class="icon-pause muted"></i> <span class="muted">mark inactive</span></a></li>
              <li class="divider"></li>
              <li id="remove"><a href="bulkRoster-rsi.html" onclick="moveTo('spareList','d')"><i class="icon-trash text-error"></i> <span class="text-error">remove</span></a></li>
            </ul>
          </div> <!-- / class="btn-group" -->
          <div class="btn-group">
            <button onclick="window.location.replace('addPlayer.cgi?action=add&type=s')" id="spareGroupAdd" class="btn btn-primary" style="border-radius: 0px;"><span class="icon-user"></span>&nbsp;<span class="icon-plus"></span></button>
          </div>
        </div> <!-- / class="form-actions" -->

<table class="table table-hover table-condensed" id="spareList" cellpadding="2" cellspacing="0" border="0">
<tbody>
EOE

if [ ${sparesCount:-0} -gt 0 ] ; then
  for player in `grep -i "~[s]~[s|g]~[u|c]~[a|e]$" ${ROSTER} | sort -u -t"~" -k1 | sort -t"~" -k5 -k3 | awk -F"~" '{if($1 !~ /^#/){print $1}}'`; do 
    #moveToerxext="regulars"
    #moveToIcon="icon-upload"

    printf "<tr id=\"$player\">\n"
    printf "<td width=\"10\">\n"
    printf "<input type=\"checkbox\" id=\"cb_$player\" name=\"spare\" onclick=\"selectRow(this)\" style=\"vertical-align: baseline;\">"
    
    printf "</td><td><label for=\"cb_$player\"> %s" "`getFullName $player`"
    if [ `isGoalie $player` -eq 0 ] ; then
      printf "<i class="muted"> (goalie)</i>"
    fi
    printf "</label></td>\n"
    printf "</tr>"
  done
else
  printf "<tr rowspan=\"2\"><td>none</td></tr>\n"
fi

cat << EOW
</tbody>
</table>
   </div> <!-- /class="accordion-inner" -->
  </div> <!-- /id="sparesSection" -->
</div> <!-- /class="accordion-group" -->
EOW

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# I N A C T I V E
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
if [ $inactiveCount -eq 0 ] ; then
  inactiveSelectorEnabled="disabled"
fi
cat << EEE
  <div class="accordion-group">
    <div class="accordion-heading">
      <a class="accordion-toggle" style="text-decoration:none;" data-toggle="collapse" data-parent="#roster" href="#inactiveSection"><b>Inactive($inactiveCount):</b></a>
    </div>
    <div id="inactiveSection" class="accordion-body collapse out">
      <div class="accordion-inner"  style="${inactiveSectionHeight}">
        <div class="form-actions" style="margin:0px; padding:0px;">
          <div class="btn-group">
            <button $inactiveSelectorEnabled class="btn btn-small dropdown-toggle" style="border-radius: 0px;" data-toggle="dropdown"><input id="inactiveGroup" type="checkbox" style="margin-top:0px;">&nbsp;&nbsp;<span class="icon-caret-down"></button>
            <ul class="dropdown-menu">
              <li><a onclick="toggleGroup2(true,'inactiveGroup','inactive')">all</a></li>
              <li><a onclick="toggleGroup2(false,'inactiveGroup','inactive')">none</a></li>
            </ul>
          </div> <!-- /class="btn-group" -->
          
          <div class="btn-group">
            <button id="inactiveGroupMenu" class="btn btn-primary dropdown-toggle" style="border-radius: 0px; display: none;" data-toggle="dropdown"><i class="icon-user icon-white">&nbsp;</i> Actions <span class="icon-caret-down"></span></button>
              <ul class="dropdown-menu">
                <li id="edit"><a href="#" onclick="editPlayer('inactiveList')"><i class="icon-edit text-info"></i> <span class="text-info">edit</span></a></li>
                <li id="move"><a href="bulkRoster-rsi.html" onclick="moveTo('inactiveList','r')"><i class="icon-upload-alt text-warning"></i> <span class="text-warning">move to regulars</span></a></li>
                <li id="markInactive"><a href="bulkRoster-rsi.html" onclick="moveTo('inactiveList','s')"><i class="icon-download-alt"></i> <span class="muted">move to spares</span></a></li>
                <li class="divider"></li>
                <li id="remove"><a href="bulkRoster-rsi.html" onclick="moveTo('inactiveList','d')"><i class="icon-trash text-error"></i> <span class="text-error">remove</span></a></li>
              </ul>
          </div> <!-- / class="btn-group" -->
          <div class="btn-group">
            <button onclick="window.location.replace('addPlayer.cgi?action=add&type=i')" id="inactiveGroupAdd" class="btn btn-primary" style="border-radius: 0px;"><span class="icon-user"></span>&nbsp;<span class="icon-plus"></span></button>
          </div>
        </div> <!-- / class="form-actions" -->

<table class="table table-hover table-condensed" id="inactiveList" >
<tbody>
EEE

if [ $inactiveCount -gt 0 ] ; then
  for player in `grep -i "~[i]~[s|g]~[u|c]~[a|e]$" ${ROSTER} | sort -u -t"~" -k1 |sort -t"~" -k3 | awk -F"~" '{if($1 !~ /^#/){print $1}}'`; do 
    #moveToText="spares"
    #moveToIcon="icon-download-alt"
    printf "<tr id=\"$player\">\n"
    printf "<td width=\"10\">\n"
    printf "<input type=\"checkbox\" id=\"cb_$player\" name=\"inactive\" onclick=\"selectRow(this)\" style=\"vertical-align: baseline;\">"
    printf "</td><td><label for=\"cb_$player\"> %s" "`getFullName $player`"
    if [ `isGoalie $player` -eq 0 ] ; then
      printf "<i class="muted"> (goalie)</i>"
    fi
    printf "</label></td>"
    printf "</tr>"
  done
else
  printf "<tr rowspan=\"2\"><td>none</td></tr>\n"
fi
cat << EOW
</tbody>
</table>

   </div> <!-- /class="accordion-inner" -->
  </div> <!-- /id="regularsSection" -->
</div> <!-- /class="accordion-group" -->

</div> <!-- /class="accordion" -->

<div id="confirmDialogue" class="modal hide fade" style="display: none; ">
  <div class="modal-body">
    <div id="removeMessage">Really delete players ?</div>
  </div>
  <div class="modal-footer">
    <a href="#" class="btn btn-danger btn-small" data-dismiss="modal">Cancel</a>
    <a href="bulkRoster-rsi.html" class="btn btn-small btn-success" onclick="post()">OK</a>
  </div>
</div>
                    
<script type="text/javascript">

var g_rosterAction = "";
var g_rosterTable = "";
var g_deletePlayers = 0;

function post(){
  g_deletePlayers = 1;
  alert(g_deletePlayers + ' ' + g_rosterAction + ' ' + g_rosterTable);
  \$("#confirmDialogue").modal("hide");
}

function confirm(table, x){

  g_rosterAction = x;
  g_rosterTable = table;

  \$("#confirmDialogue").modal("show");
  //if (g_deletePlayers == 1) {
  //  moveTo(table, x);
  //}
}

function moveTo(table, x){
  var selected = \$("table#" + table).find("tr input[type='checkbox']:checked");
  //\$(selected).each(function(e){});
  var playerList = [];
  selected.each(
    function(i,e){
      playerList.push(\$(e).parent().parent().attr('id'));
    }
  );

  //alert(playerList.join(";"));

  var request = \$.ajax({
     type: "POST",
     url: "player.cgi",
     async: false,
     data: { action: "mt" + x , plist: playerList.join(";") }
     });
     
   request.done(function( msg ) {
       //alert( "Players Moved");
       //window.location.href = "bulkRoster-rsi.cgi";
       //var loc = \$(this).attr('href');
   });
   
   request.complete(function( msg ) {
       //alert( "Players Moved");
       //window.location.href = "bulkRoster-rsi.cgi";
       //var loc = \$(this).attr('href');
       window.location.assign(\$(this).attr('href'));             
   });
  
}

function editPlayer(table)
{
  var player = \$("table#" + table).find("tr input[type='checkbox']:checked");
  var hrefval = \$(this).attr('href');
  var link='addPlayer.html?action=edt&plist='
          + \$(player).parent().parent().attr('id');
  //alert(link)
  window.location.assign(link);
}

function unhideMenu(group)
{
  //val = document.getElementById('goalieGroup').checked ? true : false;
  //document.getElementById('goalieMenu').disabled = !val;
  menuDisp = document.getElementById(group).checked ? "inline" : "none";
  addDisp  = document.getElementById(group).checked ? "none" : "inline";
  document.getElementById(group + 'Menu').style.display = menuDisp;
  document.getElementById(group + 'Add').style.display = addDisp;
}


function toggleGroup2(all,group,rowName)
{
  val = all
  if(all){
    document.getElementById(group).checked = true;
  }
  else{
    document.getElementById(group).checked = false;
  }
  trclass = document.getElementById(group).checked ? "row-selected" : ""
  elements = document.getElementsByName(rowName)
  for(e=0; e < elements.length; e++) {
    elements[e].checked=val;
    // Toggle hover class
    //var tr = elements[e].parentNode.parentNode;
    //tr.className = trclass;
    highlightRow(elements[e], group);
  }
  // TODO: Unhide/enable menu
  //document.getElementById('submenu').style.display = (document.getElementById('goalieGroup').checked) ? "inline" : "none";
  document.getElementById('edit').style.display = document.getElementById(group).checked ? "none" : "inline";
  unhideMenu(group);
}

function highlightRow(e, group)
{
  trclass = document.getElementById(group).checked ? "row-selected" : ""
  var tr = e.parentNode.parentNode;
  tr.className = trclass;
}

function enableMenu(eName)
{
  elements = document.getElementsByName(eName)
  var rowsSelected=0;
  for(e=0;e<elements.length;e++) {
    rowsSelected += elements[e].checked ? 1 : 0;
  }
  //document.getElementById('submenu').disabled = rowsSelected > 0 ? false : true;
  document.getElementById(eName + 'GroupMenu').style.display = rowsSelected > 0 ? "inline" : "none";
  document.getElementById(eName + 'GroupAdd').style.display = rowsSelected > 0 ? "none" : "inline";
  document.getElementById('edit').style.display = rowsSelected > 1 ? "none" : "inline";
}

function selectRow(e)
{
  //alert(e.getAttribute('data-player-type'));
  trclass = e.checked ? "row-selected" : ""
  var tr = e.parentNode.parentNode;
  tr.className = trclass;
  //alert('e.name:' + e.getAttribute('name'));
  enableMenu(e.getAttribute('name'));
}

function selectListByClass(tid, c, group)
{
  //alert("selectListByClass");
   // Clear any selected checkboxes
  \$("table#" + tid + " :checkbox").each(
    function(i,e){
      \$(e).prop('checked', false);
      \$(e).parent().parent().removeClass('row-selected');
   });

//alert("after clearing check boxes");
  // Filter rows with the specified class 's'
  var items = \$("table#" + tid + " ." + c);
//alert(items + " c: " + c);
  //\$("table#" + tid + " ." + c).each(
  items.each(
    function(i,e){
      //alert(e);
      \$(e).prop('checked', true);
      //alert(\$(e).parent().parent().className);
      \$(e).parent().parent().toggleClass('row-selected');
      }
  );

  // Unhide the menu if is should be
  if(items.length > 0){
    document.getElementById(group).checked = true;
    unhideMenu(group);
  }
}

</script>
EOW
}
